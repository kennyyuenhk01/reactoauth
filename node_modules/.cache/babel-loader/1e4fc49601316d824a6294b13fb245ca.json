{"ast":null,"code":"var _jsxFileName = \"/Users/user2/Documents/PRJ/reactoauth/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport Amplify from '@aws-amplify/core';\nimport { Auth, Storage } from 'aws-amplify';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    Amplify.configure({\n      // Auth: {\n      //     identityPoolId: 'ca-central-1:1e2b9164-0bf8-483b-9819-6d3c210ba1ef', //REQUIRED - Amazon Cognito Identity Pool ID\n      //     region: 'ca-central-1', // REQUIRED - Amazon Cognito Region\n      //     //userPoolId: 'XX-XXXX-X_abcd1234', //OPTIONAL - Amazon Cognito User Pool ID\n      //     //userPoolWebClientId: 'XX-XXXX-X_abcd1234', //OPTIONAL - Amazon Cognito Web Client ID\n      // },\n      Storage: {\n        AWSS3: {\n          bucket: 'kenny-react-bucket-ca',\n          //REQUIRED -  Amazon S3 bucket name\n          region: 'ca-central-1' //OPTIONAL -  Amazon service region\n\n        }\n      }\n    });\n  }, []);\n  useEffect(() => {\n    checkUser();\n  }, []);\n\n  async function checkUser() {\n    try {\n      const currentUser = await Auth.currentUserPoolUser();\n      setUser({\n        username: currentUser.username,\n        ...currentUser.attributes\n      });\n      console.log(currentUser);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function logOff() {\n    Auth.signOut();\n  }\n\n  const ref = useRef(null);\n\n  const handleFileLoad = () => {\n    const filename = ref.current.files[0].name;\n    console.log(filename);\n    Storage.put(filename, ref.current.files[0]).then(resp => {\n      console.log(resp);\n      console.log(user.email, 'uploaded', filename, 'successful!');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.username, \" : \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref,\n        type: \"file\",\n        onChange: handleFileLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logOff,\n        children: \" Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"video-bg\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          width: \"auto\",\n          height: \"auto\",\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: \"https://assets.codepen.io/3364143/7btrrd.mp4\",\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Auth.federatedSignIn({\n          provider: \"Google\"\n        }),\n        children: \"Login via Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(App, \"+EIHmp3CeYvjraD5fdWVgjuLbjs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user2/Documents/PRJ/reactoauth/src/App.js"],"names":["useState","useEffect","useRef","Amplify","Auth","Storage","App","user","setUser","configure","AWSS3","bucket","region","checkUser","currentUser","currentUserPoolUser","username","attributes","console","log","error","logOff","signOut","ref","handleFileLoad","filename","current","files","name","put","then","resp","email","catch","err","federatedSignIn","provider"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport Amplify from '@aws-amplify/core';\nimport { Auth, Storage } from 'aws-amplify';\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n\n    Amplify.configure({\n        // Auth: {\n        //     identityPoolId: 'ca-central-1:1e2b9164-0bf8-483b-9819-6d3c210ba1ef', //REQUIRED - Amazon Cognito Identity Pool ID\n        //     region: 'ca-central-1', // REQUIRED - Amazon Cognito Region\n        //     //userPoolId: 'XX-XXXX-X_abcd1234', //OPTIONAL - Amazon Cognito User Pool ID\n        //     //userPoolWebClientId: 'XX-XXXX-X_abcd1234', //OPTIONAL - Amazon Cognito Web Client ID\n        // },\n        Storage: {\n            AWSS3: {\n                bucket: 'kenny-react-bucket-ca', //REQUIRED -  Amazon S3 bucket name\n                region: 'ca-central-1', //OPTIONAL -  Amazon service region\n            }\n        }\n    });\n\n  }, [])\n\n  useEffect(() => {\n\n    checkUser();\n\n  }, [])\n\n  async function checkUser() {\n    try {\n      const currentUser = await Auth.currentUserPoolUser();\n      setUser({username: currentUser.username, ...currentUser.attributes})\n      console.log(currentUser);     \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function logOff() {\n    Auth.signOut();\n  }\n\n  const ref = useRef(null);\n\n  const handleFileLoad = () => {\n    const filename = ref.current.files[0].name;\n    console.log(filename);\n    Storage.put(filename, ref.current.files[0]).then(resp => {\n      console.log(resp);\n      console.log(user.email,'uploaded', filename, 'successful!');\n    }).catch(err => {console.log(err);});\n  }\n\n  if(user) {\n    return(\n      <>\n        <p>{ user.username } : { user.email }</p>\n        <input ref={ref} type=\"file\" onChange={handleFileLoad} />\n        <button onClick = { logOff} > Log Out</button>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <div class=\"video-bg\">\n         <video width=\"auto\" height=\"auto\" autoPlay loop muted>\n          <source src=\"https://assets.codepen.io/3364143/7btrrd.mp4\" type=\"video/mp4\" />\n        </video>\n        </div>\n        <button onClick={() => Auth.federatedSignIn( {provider: \"Google\"})}>Login via Google</button>\n      </>\n    );\n  } \n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}