{"ast":null,"code":"var _jsxFileName = \"/Users/user2/Documents/hk01/reactoauth/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //import Amplify from '@aws-amplify/core';\n\nimport { Auth } from 'aws-amplify';\nimport LoginPage from './component/page/login';\nimport ErrorLoginPage from './component/page/error_login';\nimport ListPage from './component/page/list';\nimport S3Config from './s3Config';\nimport * as R from 'ramda';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst whiteList = JSON.parse(process.env.REACT_APP_WHITE_LIST); //const {includes} = R;\n\nfunction App() {\n  _s();\n\n  S3Config(); //console.log('out: '+Checkuser().username);   \n\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    async function checkUser() {\n      try {\n        const currentUser = await Auth.currentUserPoolUser();\n        setUser({\n          username: currentUser.username,\n          ...currentUser.attributes\n        });\n        console.log(currentUser);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    checkUser();\n  }, []);\n\n  if (user) {\n    console.log(R.includes(user.email, whiteList));\n    var whitelistpass = R.includes(user.email, whiteList);\n\n    if (whitelistpass) {\n      return /*#__PURE__*/_jsxDEV(ListPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ErrorLoginPage, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user2/Documents/hk01/reactoauth/src/App.js"],"names":["React","useEffect","useState","Auth","LoginPage","ErrorLoginPage","ListPage","S3Config","R","whiteList","JSON","parse","process","env","REACT_APP_WHITE_LIST","App","user","setUser","checkUser","currentUser","currentUserPoolUser","username","attributes","console","log","error","includes","email","whitelistpass"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,GAAR,CAAYC,oBAAvB,CAAlB,C,CAEA;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACbR,EAAAA,QAAQ,GADK,CAEb;;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeiB,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,WAAW,GAAG,MAAMhB,IAAI,CAACiB,mBAAL,EAA1B;AACAH,QAAAA,OAAO,CAAC;AAACI,UAAAA,QAAQ,EAAEF,WAAW,CAACE,QAAvB;AAAiC,aAAGF,WAAW,CAACG;AAAhD,SAAD,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACD,OAJD,CAIE,OAAOM,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF;;AACDP,IAAAA,SAAS;AACV,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAGF,IAAH,EAAS;AAEPO,IAAAA,OAAO,CAACC,GAAR,CAAYhB,CAAC,CAACkB,QAAF,CAAWV,IAAI,CAACW,KAAhB,EAAuBlB,SAAvB,CAAZ;AACA,QAAImB,aAAa,GAAGpB,CAAC,CAACkB,QAAF,CAAWV,IAAI,CAACW,KAAhB,EAAuBlB,SAAvB,CAApB;;AAEA,QAAImB,aAAJ,EAAkB;AAChB,0BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,MAKI;AACF,0BACE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEZ;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF,GAfD,MAeO;AACL,wBACE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACF;;GAtCQD,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n//import Amplify from '@aws-amplify/core';\nimport { Auth } from 'aws-amplify';\nimport LoginPage from './component/page/login';\nimport ErrorLoginPage from './component/page/error_login';\nimport ListPage from './component/page/list';\nimport S3Config from './s3Config';\nimport * as R from 'ramda'\nimport './App.css';\n\nconst whiteList = JSON.parse(process.env.REACT_APP_WHITE_LIST);\n\n//const {includes} = R;\n\n\nfunction App() {\n  S3Config();\n  //console.log('out: '+Checkuser().username);   \n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    async function checkUser() {\n      try {\n        const currentUser = await Auth.currentUserPoolUser();\n        setUser({username: currentUser.username, ...currentUser.attributes});\n        console.log(currentUser);     \n      } catch (error) {\n        console.log(error);\n      }\n    }\n    checkUser();\n  }, []);\n\n  if(user) {\n    \n    console.log(R.includes(user.email, whiteList));\n    var whitelistpass = R.includes(user.email, whiteList);\n\n    if (whitelistpass){\n      return(\n        <ListPage></ListPage>\n      );\n    }\n    else{\n      return(\n        <ErrorLoginPage user={user}></ErrorLoginPage>\n      );\n    }\n  } else {\n    return (\n      <LoginPage user={user}></LoginPage>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}